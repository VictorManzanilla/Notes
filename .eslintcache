[{"/Users/baguetteboi/Desktop/mern-crud/client/src/index.js":"1","/Users/baguetteboi/Desktop/mern-crud/client/src/App.js":"2","/Users/baguetteboi/Desktop/mern-crud/client/src/Routes.js":"3","/Users/baguetteboi/Desktop/mern-crud/client/src/Create.js":"4","/Users/baguetteboi/Desktop/mern-crud/client/src/Nav.js":"5","/Users/baguetteboi/Desktop/mern-crud/client/src/SinglePost.js":"6","/Users/baguetteboi/Desktop/mern-crud/client/src/UpdatePost.js":"7","/Users/baguetteboi/Desktop/mern-crud/client/src/Login.js":"8","/Users/baguetteboi/Desktop/mern-crud/client/src/helpers.js":"9","/Users/baguetteboi/Desktop/mern-crud/client/src/PrivateRoute.js":"10"},{"size":186,"mtime":1611191285125,"results":"11","hashOfConfig":"12"},{"size":2400,"mtime":1612403299559,"results":"13","hashOfConfig":"12"},{"size":896,"mtime":1612315453236,"results":"14","hashOfConfig":"12"},{"size":2723,"mtime":1611765585297,"results":"15","hashOfConfig":"12"},{"size":2163,"mtime":1612403253773,"results":"16","hashOfConfig":"12"},{"size":1474,"mtime":1611682131013,"results":"17","hashOfConfig":"12"},{"size":3051,"mtime":1611765597292,"results":"18","hashOfConfig":"12"},{"size":2253,"mtime":1612315403379,"results":"19","hashOfConfig":"12"},{"size":1236,"mtime":1611622612756,"results":"20","hashOfConfig":"12"},{"size":486,"mtime":1611678038922,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vgfx50",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/baguetteboi/Desktop/mern-crud/client/src/index.js",[],["48","49"],"/Users/baguetteboi/Desktop/mern-crud/client/src/App.js",["50"],"/Users/baguetteboi/Desktop/mern-crud/client/src/Routes.js",["51"],"import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport App from './App'\nimport Create from './Create'\nimport SinglePost from './SinglePost'\nimport UpdatePost from './UpdatePost'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport notes from './notes.jpg'\nimport './main.css'\n\n\nconst Routes = () => {\n    return(\n        <div className=\"foto\">\n        \n        <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact component={App} />\n            <PrivateRoute path=\"/create\"  exact component={Create} />\n            <Route path=\"/login\"  exact component={Login} />\n            <Route path=\"/post/:slug\"  exact component={SinglePost} />\n            <PrivateRoute path=\"/post/update/:slug\"  exact component={UpdatePost} />\n\n        </Switch>\n        </BrowserRouter>\n        \n        </div>\n    )\n}\n\nexport default Routes","/Users/baguetteboi/Desktop/mern-crud/client/src/Create.js",[],"/Users/baguetteboi/Desktop/mern-crud/client/src/Nav.js",["52"],"/Users/baguetteboi/Desktop/mern-crud/client/src/SinglePost.js",["53"],"import React, {useState, useEffect} from 'react'\nimport axios from'axios'\nimport Nav from './Nav'\nimport renderHTML from 'react-render-html'\n\n\nconst SinglePost = (props) => {\n\n    const [post, setPost] = useState('')\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/post/${props.match.params.slug}`)\n        .then(response => {\n            //console.log(response)\n            setPost(response.data)\n        })\n        .catch(error => alert('Error loading single post'))\n    }, [])\n\n    const showSinglePost = () => (\n        <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2 pt-3 pb-2\">\n                <h1>{post.title}</h1>\n                <div className=\"lead pt-3\">{renderHTML(post.content)}</div>\n                <p>\n                    Author<span className=\"badge\">{post.user}</span> Published on{' '} \n                    <span className=\"badge\">{new Date(post.createdAt).toLocaleString()}</span>\n                </p>\n                {/* {JSON.stringify(props)} */}\n                \n            </div>\n       </div>\n    )\n\n    //post && showSinglePost why? post is available by running the useEffect, so the function renderHTML tries to render before there is any content\n    // so we get error when we have {renderHTML(post.content)} in the div classname lead pt-3.\n    return(\n        <div className=\"container pb-5\">\n            <Nav/>\n            {post && showSinglePost()}\n        </div>\n    )\n\n}\nexport default SinglePost","/Users/baguetteboi/Desktop/mern-crud/client/src/UpdatePost.js",["54"],"import React, {useState, useEffect} from 'react'\nimport axios from'axios'\nimport Nav from './Nav'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.bubble.css'\nimport {getToken} from './helpers'\n\nconst UpdatePost = (props) => {\n\n    const [state, setState] = useState({\n        title: '',\n        slug: '',\n        // content: '',\n        user: ''\n    })\n    const {title, slug, user} = state\n\n    const [content, setContent] = useState('')\n\n    // rich text editor handle change\n    const handleContent = (e) => {\n        console.log(e)\n        setContent(e)\n    }\n\n\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/post/${props.match.params.slug}`)\n        .then(response => {\n            const {title, content, slug, user} = response.data\n            setState({...state, title, slug, user})\n            setContent(content)\n        })\n        .catch(error => alert('Error loading single post'))\n    }, [])\n\n    const handleChange = (name) => (event) => {\n        //console.log('name', name, 'value', event.target.value)\n        setState({...state, [name]: event.target.value})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axios\n        .put(`http://localhost:8000/api/post/${slug}`, {title, content, user}, {\n            headers: {\n                authorization: `Bearer ${getToken()}`\n            }\n        })\n        .then(response => {\n            console.log(response)\n            const {title, content, slug, user} = response.data\n            //empty state\n            setState({...state, title, content, slug, user})\n            //show success alert\n            alert(`Post titled ${title} is updated`)\n        })\n        .catch(error => {\n            alert(error.response.data.error)\n        })\n    }\n\n    const showUpdateForm = () => (\n        <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Title</label>\n            <input onChange={handleChange('title')} value={title} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required/>\n        </div>\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Content</label>\n            <ReactQuill \n             onChange={handleContent} \n             value={content} \n             theme=\"bubble\"\n             className=\"pb-5 mb-3\" \n             style={{border: '1px solid #666'}}\n             placeholder=\"write here..\" \n        \n            />\n        </div>\n        <div className=\"form-group\">\n            <label className=\"text-muted\">User</label>\n            <input onChange={handleChange('user')} value={user} type=\"text\" className=\"form-control\" placeholder=\"Your name\" required/>\n        </div>\n        <br/>\n        <div>\n            <button className=\"btn btn-primary\">Update</button>\n        </div>\n    </form>\n    )\n    return(\n        <div className=\"container pb-5\">\n            <Nav/>\n            <br/>\n            <h1>Update Post</h1>\n           {showUpdateForm()}\n        </div>\n    )\n\n}\nexport default UpdatePost","/Users/baguetteboi/Desktop/mern-crud/client/src/Login.js",["55"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { withRouter} from 'react-router-dom'\nimport Nav from './Nav'\nimport {authenticate, getUser} from './helpers'\nimport './main.css'\n\n\nconst Login = (props) => {\n    const [state, setState] = useState({\n        name: '',\n        password: ''\n    })\n//destructure values from state\n    const {username, password} = state\n\n\n    useEffect(() => {\n        getUser() && props.history.push('/')\n    }, [])\n\n     //onchange event handler\n     const handleChange = (name) => (event) => {\n        //console.log('name', name, 'value', event.target.value)\n        setState({...state, [name]: event.target.value})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        //console.log(username, password)\n        axios\n        .post('http://localhost:8000/api/login', {username, password})\n        .then(response => {\n            console.log(response)\n            // response will contain token and name\n            authenticate(response, () => props.history.push('/create'))\n            // redirect to create page\n        })\n        .catch(error => {\n            console.log(error.response)\n            alert(error.response.data.error)\n        })\n    }\n\n    return(\n        <div className='container pb-5 login'>\n            <Nav/>\n            <br/>\n            <h1>Login</h1>\n            <br/>\n            <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Username</label>\n            <input onChange={handleChange('username')} \n            value={username} \n            type=\"text\" \n            className=\"form-control\" \n            placeholder=\"Username\" \n            required/>\n        </div>\n        <div className=\"form-group\">\n            <label className=\"text-muted\">Password</label>\n            <input \n            onChange={handleChange('password')} \n            value={password} \n            type=\"password\" \n            className=\"form-control\" \n            placeholder=\"Password\" \n            required/>\n        </div>\n        <br/>\n        <div>\n            <button className=\"btn btn-primary\">Login</button>\n        </div>\n    </form>\n        </div>\n    )\n}\nexport default withRouter(Login)","/Users/baguetteboi/Desktop/mern-crud/client/src/helpers.js",[],"/Users/baguetteboi/Desktop/mern-crud/client/src/PrivateRoute.js",["56"],"import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getUser } from './helpers';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            getUser() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":18,"column":8,"nodeType":"68","endLine":18,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":36,"column":8,"nodeType":"68","endLine":36,"endColumn":10,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":20,"column":8,"nodeType":"68","endLine":20,"endColumn":10,"suggestions":"73"},{"ruleId":"61","severity":1,"message":"74","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'notes' is defined but never used.","Identifier","unusedVar","'notas' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.slug'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'props.match.params.slug' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["78"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["79"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [props.match.params.slug]",{"range":"86","text":"87"},"Update the dependencies array to be: [props.match.params.slug, state]",{"range":"88","text":"89"},"Update the dependencies array to be: [props.history]",{"range":"90","text":"91"},[496,498],"[props.match.params.slug]",[941,943],"[props.match.params.slug, state]",[475,477],"[props.history]"]